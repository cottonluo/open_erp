"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.TypeInferenceError = undefined;

var _assert = require("assert");

var _assert2 = _interopRequireDefault(_assert);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Thrown error if an error occurs during type inference
 */
class TypeInferenceError extends Error {
	/**
  * Creates a new instance
  * @param {Error|string} cause either an error object that describes the main cause or a message describing the error.
  * @param {AstNode} node the node that has triggered the error
     */
	constructor(cause, node) {
		(0, _assert2.default)(cause, "A cause is required");
		(0, _assert2.default)(node, "The node that has caused the error is required");

		const message = cause instanceof Error ? cause.message : cause;
		super(`Type inference failure: ${ message }`);

		if (cause instanceof Error) {
			this.stack = cause.stack;
		}
		this.node = node;
		this.cause = cause;
	}
}

exports.TypeInferenceError = TypeInferenceError;
exports.default = TypeInferenceError;
//# sourceMappingURL=type-inference-error.js.map
