"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ReturnStatementRefinementRule = undefined;

var _symbol = require("../../semantic-model/symbol");

var _symbol2 = _interopRequireDefault(_symbol);

var _types = require("../../semantic-model/types");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Refinement rule that handles the return statement.
 * A return statement needs to find the enclosing function declaration and unifies the
 * return type of the function with the type resulting of the return expression
 * @implements {RefinementRule}
 */
class ReturnStatementRefinementRule {
	canRefine(node) {
		return node.type === "ReturnStatement";
	}

	refine(node, context) {
		let argumentType = this._getReturnType(node, context);
		const returnType = context.getType(_symbol2.default.RETURN);

		if (returnType) {
			argumentType = context.unify(returnType, argumentType, node);
		}
		context.setType(_symbol2.default.RETURN, argumentType);

		return _types.VoidType.create();
	}

	_getReturnType(node, context) {
		if (node.argument) {
			return context.infer(node.argument);
		}
		return _types.VoidType.create();
	}
}

exports.ReturnStatementRefinementRule = ReturnStatementRefinementRule;
exports.default = ReturnStatementRefinementRule;
//# sourceMappingURL=return-statement-refinement-rule.js.map
