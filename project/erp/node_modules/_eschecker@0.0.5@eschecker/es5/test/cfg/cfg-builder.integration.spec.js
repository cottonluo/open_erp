"use strict";

var _fs = require("fs");

var _fs2 = _interopRequireDefault(_fs);

var _chai = require("chai");

var _glob = require("glob");

var _glob2 = _interopRequireDefault(_glob);

var _path = require("path");

var _path2 = _interopRequireDefault(_path);

var _dot = require("../../lib/cfg/dot");

var _babylon = require("babylon");

var _babelTraverse = require("babel-traverse");

var _babelTraverse2 = _interopRequireDefault(_babelTraverse);

var _cfgBuilder = require("../../lib/cfg/cfg-builder");

var _cfgBuilder2 = _interopRequireDefault(_cfgBuilder);

var _util = require("../../lib/util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

describe("CfgBuilder integration tests", () => {
	const testCasesDirectory = "./test/cfg/test-cases";
	const cases = _glob2.default.sync("**/*.case.js", { cwd: testCasesDirectory });

	for (const casePath of cases) {
		const sourceCode = _fs2.default.readFileSync(_path2.default.join(testCasesDirectory, casePath), "utf-8");
		const expectedPath = casePath.replace(/\.case\.js/, ".expected.dot");
		const expected = _fs2.default.readFileSync(_path2.default.join(testCasesDirectory, expectedPath), "utf-8");

		describe(casePath, () => {
			it("creates the control flow graph correctly", () => {
				// arrange
				const ast = (0, _babylon.parse)(sourceCode);
				const builder = new _cfgBuilder2.default(ast);

				// act
				(0, _babelTraverse2.default)(ast, (0, _util.createTraverseVisitorWrapper)(builder));

				// assert
				const dot = (0, _dot.cfgToDot)(ast.cfg, { stable: true });
				(0, _chai.expect)(dot).to.equal(expected);
			});
		});
	}
});
//# sourceMappingURL=cfg-builder.integration.spec.js.map
