"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.ForOfStatementRefinementRule = undefined;

var _types = require("../../semantic-model/types");

var _typeInferenceError = require("../type-inference-error");

/**
 * For of statement refinement rule
 * @implements {RefinementRule}
 */
class ForOfStatementRefinementRule {
	canRefine(node) {
		return node.type === "ForOfStatement";
	}

	refine(node, context) {
		const tLeft = context.infer(node.left);
		const tRight = context.infer(node.right);

		if (tRight instanceof _types.ArrayType) {
			context.substitute(tLeft, tRight.of);
		} else {
			throw new _typeInferenceError.TypeInferenceError(`The type ${ tRight } does not support iteration.`, node.right);
		}

		return _types.VoidType.create();
	}
}

exports.ForOfStatementRefinementRule = ForOfStatementRefinementRule;
exports.default = ForOfStatementRefinementRule;
//# sourceMappingURL=for-of-statement-refinement-rule.js.map
