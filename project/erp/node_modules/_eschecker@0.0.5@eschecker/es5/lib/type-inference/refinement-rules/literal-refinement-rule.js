"use strict";

Object.defineProperty(exports, "__esModule", {
	value: true
});
exports.LiteralRefinementRule = undefined;

var _types = require("../../semantic-model/types");

var _typeInferenceError = require("../type-inference-error");

/**
 * Refinement rule for number, string and null literals
 * @implements {RefinementRule}
 */
class LiteralRefinementRule {
	canRefine(node) {
		switch (node.type) {
			case "NumericLiteral":
			case "StringLiteral":
			case "NullLiteral":
			case "BooleanLiteral":
				return true;
			default:
				return false;
		}
	}

	refine(node) {
		switch (node.type) {
			case "NumericLiteral":
				return _types.NumberType.create();
			case "StringLiteral":
				return _types.StringType.create();
			case "NullLiteral":
				return _types.NullType.create();
			case "BooleanLiteral":
				return _types.BooleanType.create();
			default:
				/* istanbul ignore next */
				throw new _typeInferenceError.TypeInferenceError(`Node with type ${ node.type } not supported by the literal refinement rule.`, node);
		}
	}
}

exports.LiteralRefinementRule = LiteralRefinementRule;
exports.default = LiteralRefinementRule;
//# sourceMappingURL=literal-refinement-rule.js.map
